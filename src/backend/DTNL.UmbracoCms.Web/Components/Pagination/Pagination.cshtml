@using DTNL.UmbracoCms.Web.Components
@using DTNL.UmbracoCms.Web.Helpers
@using DTNL.UmbracoCms.Web.Helpers.Aliases
@using DTNL.UmbracoCms.Web.Helpers.Extensions
@using Umbraco.Cms.Core.Dictionary

@inject ICultureDictionary CultureDictionary

@model DTNL.UmbracoCms.Web.Components.Pagination?

@{
    if (Model == null)
    {
        return;
    }

    const string pageQuery = QueryStringHelper.PageQueryString;
}

<div class="c-pagination @Model.CssClasses">
    @if (Model.CurrentPage <= 1)
    {
        <span class="pagination__link pagination__actionpagination__action--prev pagination__action--disabled" aria-disabled rel="prev">
            <svg src="@SvgAliases.Icons.ArrowLeft" />
            <span class="u-sr-only" asp-translation="@TranslationAliases.Common.Pagination.PreviousPage"></span>
        </span>
    }
    else
    {
        <a class="pagination__link pagination__action pagination__action--prev" rel="prev" href="@Context.GetNewQueryUrl(pageQuery, $"{Model.CurrentPage - 1}")">
            <svg src="@SvgAliases.Icons.ArrowLeft" />
            <span class="u-sr-only" asp-translation="@TranslationAliases.Common.Pagination.PreviousPage"></span>
        </a>
    }

    <nav class="pagination__list">
        @foreach (Pagination.IPaginationItem item in Model.PageItems)
        {
            switch (item)
            {
                case Pagination.PaginationItem paginationItem:
                    bool active = paginationItem.Page == Model.CurrentPage;

                    <a aria-current="@active"
                       aria-label="@CultureDictionary.GetTranslation(TranslationAliases.Common.Pagination.PreviousPage, Model.CurrentPage)"
                       href=" @Context.GetNewQueryUrl(pageQuery, $"{paginationItem.Page}")"
                       class="pagination__link pagination__page @(active? "pagination__page--active" : "") @(Model.HideInMobile ? "pagination__page--hide-mobile" : "")">
                        <span>@paginationItem.Page</span>
                    </a>
                    break;
                case Pagination.SeparatorItem:
                    <span class="pagination__dots"></span>
                    break;
            }
        }
    </nav>

    @if (Model.CurrentPage >= Model.TotalPages)
    {
        <span class="pagination__link pagination__action pagination__action--next pagination__action--disabled" aria-disabled rel="next">
            <svg src="@SvgAliases.Icons.ArrowRight" />
            <span class="u-sr-only" asp-translation="@TranslationAliases.Common"></span>
        </span>
    }
    else
    {
        <a class="pagination__link pagination__action pagination__action--next" rel="prev" href="@Context.GetNewQueryUrl(pageQuery, $"{Model.CurrentPage + 1}")">
            <svg src="@SvgAliases.Icons.ArrowRight" />
            <span class="u-sr-only" asp-translation="@TranslationAliases.Common"></span>
        </a>
    }
</div>
