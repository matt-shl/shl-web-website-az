@using DTNL.UmbracoCms.Web.Helpers.Aliases
@using DTNL.UmbracoCms.Web.Helpers.Extensions
@using Umbraco.Cms.Core.Dictionary

@model DTNL.UmbracoCms.Web.Components.Modal

@inject ICultureDictionary CultureDictionary

<div class="c-modal @Model.Class @(Model.Size != null ? $"c-modal--size-{Model.Size}" : null)"
     id="@Model.Id"
     data-modal-auto-focus="@(Model.AutoFocus ? "true" : "false")"
     data-modal-mobile-only="@(Model.MobileOnly ? "true" : "false")"
     data-modal-no-body-class="@(Model.NoBodyClass ? "true" : "false")"
     data-modal-close-all-others="@(Model.CloseAllOthers ? "true" : "false")"
     data-modal-keep-scroll-position="@(Model.KeepScrollPosition ? "true" : "false")"
     data-modal-auto-close="@(Model.AutoClose ? "true" : "false")"
     js-hook-modal @Model.Hook>

    @if (Model.Size == "video")
    {
        <button type="button" class="modal__button-close" js-hook-button-modal-close aria-label=CultureDictionary.GetTranslation(TranslationAliases.Navigation.Close>
            <svg src="@(SvgAliases.Icons.Cross)" />
        </button>
    }

    <div class="modal__container">
        @if (Model.Image is not null)
        {
            <div class="modal__image-container-desktop">
                <partial name="Image" model="@Model.Image.With(i => i.Classes = "modal__image")" />
            </div>
        }

        <div class="modal__content" role="dialog">
            @if (Model.Size != "navigation-mobile")
            {
                <div class="modal__header">
                    <div>
                        @if (!Model.Title.IsNullOrWhiteSpace())
                        {
                            <h2 class="modal__title">@CultureDictionary.GetTranslationOrDefault(Model.Title, Model.Title)</h2>
                        }

                        @if (!Model.SubTitle.IsNullOrWhiteSpace())
                        {
                            <h3 class="modal__subtitle">@Model.SubTitle</h3>
                        }
                    </div>

                    @if (Model.Size != "video")
                    {
                        @if (!Model.NoClose)
                        {
                            <button type="button" class="modal__button-close" js-hook-button-modal-close aria-label=CultureDictionary.GetTranslation(TranslationAliases.Navigation.Close>
                                <svg src="@(SvgAliases.Icons.Cross)" />
                            </button>
                        }
                    }
                </div>
            }
            else
            {
                <div class="modal__header">
                    @CultureDictionary.GetTranslation(TranslationAliases.Navigation.Home)
                    <a href="/" class="modal__header-logo" title="Home">
                        <svg src="@(SvgAliases.Brand.LogoColor)" />
                    </a>

                    <button class="modal__header-hamburger"
                            js-hook-button-modal-close>
                        <svg src="@(SvgAliases.Icons.Cross)" />
                        @CultureDictionary.GetTranslation(TranslationAliases.Navigation.Close)
                    </button>
                </div>
            }

            <div class="modal__body" js-hook-modal-body @Html.Attributes(Model.Attributes)>
                @if (Model.Image is not null)
                {
                    <div class="modal__image-container-mobile">
                        <partial name="Image" model="@Model.Image.With(i => i.Classes = "modal__image")" />
                    </div>
                }

                @this.RenderPartialBody()
            </div>
        </div>

    </div>

    <div class="modal__background" js-hook-button-modal-close></div>

</div>
